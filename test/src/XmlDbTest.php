<?php

/**
 * Copyright (c) 2014 Jeremy Sells
 * For copying permission, copyright information, terms, etc read the 
 * LICENSE (file) that that was distributed with this source code.
 */

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-07-31 at 11:00:45.
 */
class XmlDbTest extends \PHPUnit_Framework_TestCase
{
    
    /**
     * @var XmlDb
     */
    protected $object;
    
    /**
     * The resources dir
     * @var string
     */
    protected $resourcesDir;
    
    /**
     * Test save file
     * @var string
     */
    protected $resourceDynamic;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        require_once __DIR__.'/../../src/Interfaces/XmlDb.php';
        require_once __DIR__.'/../../src/XmlDb.php';
        $this->resourcesDir = __DIR__.'/../resources/';
        $this->resourceDynamic = $this->resourcesDir.'dynamicDatabase.xml';
        $this->object = new \JeremySells\XmlDb\XmlDb();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (file_exists($this->resourceDynamic)) {
            unlink($this->resourceDynamic);
        }
    }

    /**
     * @covers JeremySells\XmlDb\XmlDb::getDom
     */
    public function testDom()
    {
        $this->object->setLoadFile($this->resourcesDir."Test1.xml");
        $dom = $this->object->getDom();
        $this->assertInstanceOf("DOMDocument", $dom);
    }
    
    /**
     * @covers JeremySells\XmlDb\XmlDb::getDom
     */
    public function testDom2()
    {
        try {
            $this->object->getDom();
            $this->assertTrue(FALSE);
        } catch (Exception $exc) {
            $this->assertInstanceOf("Exception", $exc);
        }
    }
    
    /**
     * @covers JeremySells\XmlDb\XmlDb::clear
     */
    public function testClear()
    {
        $this->object->setLoadFile($this->resourcesDir."Test1.xml");
        $dom = $this->object->getDom();
        $xpath = $this->object->getXPath();
        $this->assertSame(
            2,
            $xpath->query("//testNode[@value='test']")->length
        );
        $this->assertInstanceOf("DOMDocument", $dom);
        
        $this->object->clear();
        $dom2 = $this->object->getDom();
        $xpath2 = $this->object->getXPath();
        $this->assertSame(
            0,
            $xpath2->query("//testNode[@value='test']")->length
        );
        $this->assertInstanceOf("DOMDocument", $dom2);
    }
    
    /**
     * @covers JeremySells\XmlDb\XmlDb::clear
     */
    public function testXpath()
    {
        $this->object->setLoadFile($this->resourcesDir."Test1.xml");
        $xpath = $this->object->getXPath();
        $this->assertInstanceOf("DOMXPath", $xpath);
    }
    
    /**
     * @covers JeremySells\XmlDb\XmlDb::clear
     */
    public function testXpath2()
    {
        $this->object->setLoadFile($this->resourcesDir."Test1.xml");
        $xpath = $this->object->getXPath();
        $this->assertSame(
            2,
            $xpath->query("//testNode[@value='test']")->length
        );
        
        $this->assertSame(
            1,
            $xpath->query("//testNode[@value='test' and @valueA='a']")->length
        );
        
        $this->assertSame(
            0,
            $xpath->query("//testNode[@na='missng' and @valueA='a']")->length
        );
        
    }
    
    /**
     * @covers JeremySells\XmlDb\XmlDb::save
     */
    public function testSave()
    {
        $this->object->setLoadFile($this->resourcesDir."Test1.xml");
        $this->object->setSaveFile($this->resourceDynamic);
        
        $test = new \JeremySells\XmlDb\XmlDb();
        $test->setLoadFile($this->resourceDynamic);
        
        $xpath = $this->object->getXPath();
        $this->assertInstanceOf("DOMXPath", $xpath);
        $this->assertSame(
            2,
            $xpath->query("//testNode[@value='test']")->length
        );
    }
}
